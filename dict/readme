
在线词典功能说明

用户可以登录和注册

    * 登录凭借用户名和密码登录
    * 注册要求用户必须填写用户名,密码,其他内容自定
    * 用户名要求不能重复
    * 要求用户信息能够长期保存

可以通过基本的图形界面print以提示客户端输入

    * 程序分为服务端和客户端两部分
    * 客户端通过print打印简单界面输入命令发起请求
    * 服务端主要负责逻辑数据处理
    * 启动服务端后应该能满足多个客户端同时操作

客户端启动后即进入一级界面,包含如下功能:登录 注册 退出

    * 退出后即退出该软件
    * 登录成功即进入二级界面,失败回到一级界面
    * 注册成功可以回到一级界面继续登录,也可以直接用注册用户进入二级界面

用户登录后进入二级界面,功能如下:查单词 历史记录 注销

    * 选择注销则回到一级界面
    * 查单词:循环输入单词,得到单词解释,输入特殊符号退出单词查询状态
    * 历史记录:查询当前用户的查词记录,要求记录包含name,word,time 可以查看所有记录或者前10条均可。

项目开发流程
　　
   * 需求分析　（构建原型）
   * 技术分析　(确定基本技术使用)
   * 数据库设计　（确定数据结构和数据格式，写入项目协议）
   * 模块划分　（确定封装模型，将整体分为若干功能）
   * 协议设定　　（请求类型等）
   * 网络通信搭建　（通信是一个优先级较高的工作）
   * 实现每个功能　　（注意每个功能测试）

1. 确定技术点

   并发模型和网络模型
      多进程tcp 并发模型

   确定细节功能，注册要注册什么，注册后是否直接登录
      注册 ： 用户名密码， 加密存储，注册后直接登录
      历史记录 ： 最近的前10个

   一级界面，二级界面如何切换

     见 demo

2. mysql数据库设计  dict

    words ：  id    word   mean
    user :  id  name  passwd

    create table user (id int primary key auto_increment,name varchar(32) not null,passwd char(128) not null);

    hist :  id  name  word   time

    create table hist (id int primary key auto_increment,name varchar(32) not null,word varchar(32) not null,time datetime default now());


3. 结构设计，功能模块划分

   如何封装，客户端和服务端工作流程，有几个功能模块

   *  函数封装
   *  功能模块： 通信，登录，注册，查询，历史记录

4. 通信搭建

5. 注册
      客户端 ： 输入用户名密码
               发送请求
               接收反馈

      服务端 ： 接收请求，判断请求类型
               判定用户可否注册
               给客户端反馈


   登录
       客户端 : 输入用户名密码
               发送请求
               等待反馈

       服务端 ： 接收请求
                验证信息
                发送结果

   查询
       客户端 ： 输入单词
                发送请求 （套接字）
                接收结果

       服务器 ：　接收请求
       　　　　　　查找单词
       　　　　　　插入历史记录
       　　　　　　发送给客户端

   历史记录
   
   注销

协议 ： 登录   L
       注册   R
       查单词  Q
       历史记录  H
       退出   E

cookie：
    import  getpass

    pwd = getpass.getpass()
    功能: 隐藏输入内容


    import  hashlib

    hash = hashlib.md5()
    功能： 生产md5对象
    参数 ： 盐（自定义的字节串）

    hash.update(passwd.encode())
    功能: 进行加密处理
    参数: 密码转换为字节串

    new_passwd = hash.hexdigest()
    功能： 得到转换后的密码
